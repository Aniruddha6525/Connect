create table public.users (
  id uuid not null default extensions.uuid_generate_v4 (),
  email text not null,
  role text null,
  full_name text null,
  created_at timestamp with time zone not null default now(),
  firebase_uid text null,
  constraint users_pkey primary key (id),
  constraint users_email_key unique (email),
  constraint users_firebase_uid_key unique (firebase_uid),
  constraint users_id_key unique (id)
) TABLESPACE pg_default;

create table public.projects (
  id uuid not null default extensions.uuid_generate_v4 (),
  title text not null,
  description text null,
  tech_stack text[] null,
  student_id uuid null,
  created_at timestamp with time zone null default timezone ('utc'::text, now()),
  created_by uuid null,
  mentee_id uuid null,
  constraint projects_pkey primary key (id),
  constraint projects_student_id_fkey foreign KEY (student_id) references users (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.mentorships (
  mentor_id uuid not null default gen_random_uuid (),
  student_id uuid not null default gen_random_uuid (),
  expert_id uuid not null default gen_random_uuid (),
  topic text not null default ''::text,
  status text not null default '''pending'''::text,
  created_at timestamp without time zone not null default now(),
  mentee_id uuid null,
  constraint mentorships_pkey primary key (mentor_id),
  constraint mentorships_expert_id_fkey foreign KEY (expert_id) references users (id),
  constraint mentorships_mentee_id_fkey foreign KEY (mentee_id) references users (id) on delete CASCADE,
  constraint mentorships_student_id_fkey foreign KEY (student_id) references users (id)
) TABLESPACE pg_default;

create table public.events (
  id uuid not null default gen_random_uuid (),
  title text not null,
  description text not null,
  scheduled_at timestamp without time zone not null,
  host_id uuid not null,
  created_at timestamp with time zone null default now(),
  created_by uuid null,
  constraint events_pkey primary key (id),
  constraint events_host_id_fkey foreign KEY (host_id) references users (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.event_registrations (
  id uuid not null default gen_random_uuid (),
  event_id uuid not null,
  user_id uuid not null,
  created_at timestamp with time zone null default now(),
  mentee_id uuid null,
  constraint event_registrations_pkey primary key (id),
  constraint event_registrations_event_id_fkey foreign KEY (event_id) references events (id) on delete CASCADE,
  constraint event_registrations_user_id_fkey foreign KEY (user_id) references users (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.webinars (
  id uuid not null default extensions.uuid_generate_v4 (),
  title text not null,
  description text null,
  date_time timestamp without time zone not null,
  speaker text null,
  created_by uuid null,
  created_at timestamp without time zone null default now(),
  constraint webinars_pkey primary key (id),
  constraint webinars_created_by_fkey foreign KEY (created_by) references users (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.webinar_registrations (
  id uuid not null default extensions.uuid_generate_v4 (),
  webinar_id uuid null,
  user_id uuid null,
  registered_at timestamp without time zone null default now(),
  constraint webinar_registrations_pkey primary key (id),
  constraint webinar_registrations_webinar_id_user_id_key unique (webinar_id, user_id),
  constraint webinar_registrations_user_id_fkey foreign KEY (user_id) references users (id) on delete CASCADE,
  constraint webinar_registrations_webinar_id_fkey foreign KEY (webinar_id) references webinars (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.forum_posts (
  id uuid not null default gen_random_uuid (),
  author_id uuid null default gen_random_uuid (),
  title text null,
  content text null,
  created_at timestamp with time zone not null default now(),
  constraint forum_posts_pkey primary key (id),
  constraint forum_posts_author_id_fkey foreign KEY (author_id) references users (id)
) TABLESPACE pg_default;

create table public.forum_replies (
  id uuid not null default gen_random_uuid (),
  post_id uuid null default gen_random_uuid (),
  author_id uuid null default gen_random_uuid (),
  content text null,
  created_at timestamp with time zone not null default now(),
  constraint forum_replies_pkey primary key (id),
  constraint forum_replies_author_id_fkey foreign KEY (author_id) references users (id),
  constraint forum_replies_post_id_fkey foreign KEY (post_id) references forum_posts (id)
) TABLESPACE pg_default;